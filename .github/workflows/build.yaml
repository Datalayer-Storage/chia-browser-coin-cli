name: Build Binaries

on:
  push:
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Binaries on ${{ matrix.os }} for ${{ matrix.architecture }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: Windows
            architecture: x64
            runs-on: windows-2019
            node-version: '18.16'
            artifact-name: server_coin-win-x64
            build-command: npm run create-win-x64-dist
          - os: Linux
            architecture: x64
            runs-on: ubuntu-latest
            node-version: '18.16'
            artifact-name: server_coin-linux-x64
            build-command: npm run create-linux-x64-dist
          - os: Linux
            architecture: ARM64
            runs-on: ubuntu-latest
            node-version: '18.16'
            artifact-name: server_coin-linux-arm64
            build-command: npm run create-linux-arm64-dist

    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm install
        run: npm install

      - name: npm cache management
        run: |
          npm cache clear --force
          npm cache rm --force
          npm cache verify

      - name: Create distributions
        run: ${{ matrix.build-command }}

      - name: Make executable (Linux)
        if: startsWith(matrix.os, 'Linux')
        run: chmod +x dist/*

      - name: Signing dig.exe
        if: matrix.os == 'Windows'
        uses: ./.github/actions/signing-steps
        with:
          ARTIFACT_PATHS: ${{ github.workspace }}\dist\server_coin.exe
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          SM_HOST: ${{ secrets.SM_HOST }}
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          SM_CODE_SIGNING_CERT_SHA1_HASH: ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ github.workspace }}/dist

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: server_coin-win-x64
          path: server_coin-win-x64

      - name: Download Linux x64 deb
        uses: actions/download-artifact@v3
        with:
          name: server_coin-linux-x64
          path: server_coin-linux-x64

      - name: Download Linux arm64 deb
        uses: actions/download-artifact@v3
        with:
          name: server_coin-linux-arm64
          path: server_coin-linux-arm64

      - name: Get tag name
        id: tag-name
        run: |
          echo "TAGNAME=$(echo $GITHUB_REF | cut -d / -f 3)" >>$GITHUB_OUTPUT
      
      - name: Create zips
        run: |
          # Change directory and zip 'server_coin.exe' for win-x64
          cd server_coin-win-x64
          zip -r ../server_coin-win-x64-${{ steps.tag-name.outputs.TAGNAME }}.zip server_coin.exe
          cd ..
      
          # Change directory and zip 'server_coin' for linux-x64
          cd server_coin-linux-x64
          zip -r ../server_coin-linux-x64-${{ steps.tag-name.outputs.TAGNAME }}.zip server_coin
          cd ..
      
          # Change directory and zip 'server_coin' for linux-arm64
          cd server_coin-linux-arm64
          zip -r ../server_coin-linux-arm64-${{ steps.tag-name.outputs.TAGNAME }}.zip server_coin
          cd ..
        shell: bash
        
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            server_coin-win-x64-${{ steps.tag-name.outputs.TAGNAME }}.zip
            server_coin-linux-x64-${{ steps.tag-name.outputs.TAGNAME }}.zip
            server_coin-linux-arm64-${{ steps.tag-name.outputs.TAGNAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
